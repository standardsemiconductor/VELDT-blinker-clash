name: Haskell CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # run at the start of every day
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ${{ matrix.os }} 
    strategy:
      matrix:
        ghc: ['9.0']
        cabal: ['3.10']
        os: [ubuntu-20.04]
    name: ${{ matrix.os }} GHC ${{ matrix.ghc }} Cabal ${{ matrix.cabal }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install icestorm prerequisites
      run: |
        sudo apt-get update
        sudo apt-get install build-essential clang bison flex libreadline-dev gawk tcl-dev libffi-dev git graphviz xdot pkg-config python python3 libftdi-dev qt5-default python3-dev libboost-all-dev cmake libeigen3-dev

    - name: Checkout icestorm
      uses: actions/checkout@v4
      with:
        repository: YosysHQ/icestorm
        path: icestorm

    - name: Install icestorm
      working-directory: icestorm
      run: |
        make -j$(nproc)
        sudo make install

    - name: Checkout nextpnr
      uses: actions/checkout@v4
      with:
        repository: YosysHQ/nextpnr
        ref: master
        path: nextpnr
        submodules: true

    - name: Install nextpnr
      working-directory: nextpnr
      run: |
        cmake -DARCH=ice40 -DCMAKE_INSTALL_PREFIX=/usr/local .
        make -j$(nproc)
        sudo make install

    - name: Checkout yosys
      uses: actions/checkout@v4
      with:
        repository: YosysHQ/yosys
        ref: master
        path: yosys

    - name: Install yosys
      working-directory: yosys
      run: |
        make -j$(nproc)
        sudo make install

    - name: Setup Haskell
      uses: haskell-actions/setup@v2
      id: setup
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Configure
      run: |
        cabal configure --enable-tests --enable-benchmarks --disable-documentation
        cabal build --dry-run

    - name: Restore cached dependencies
      uses: actions/cache/restore@v3
      id: cache
      env:
        key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
      with:
        path: ${{ steps.setup.outputs.cabal-store }}
        key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
        restore-keys: ${{ env.key }}-

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: cabal build all --only-dependencies

    - name: Save cached dependencies
      uses: actions/cache/save@v3
      if: steps.cache.outputs.cache-hit != 'true'
      with:
        path: ${{ steps.setup.outputs.cabal-store }}
        key: ${{ steps.cache.outputs.cache-primary-key }}

    - name: Build
      run: cabal build all

    - name: Synthesize
      run: cabal run blinker
